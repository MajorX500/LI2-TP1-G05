<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.18">
  <compounddef id="bot_2interface_8c" kind="file" language="C++">
    <compoundname>interface.c</compoundname>
    <includes local="no">stdio.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="no">string.h</includes>
    <includes refid="bot_2data_8h" local="yes">data.h</includes>
    <includes refid="bot_2interface_8h" local="yes">interface.h</includes>
    <includes refid="bot_2logic_8h" local="yes">logic.h</includes>
    <includes refid="bot_2linked__lists_8h" local="yes">linked_lists.h</includes>
    <includes refid="bot_2algorithms_8h" local="yes">algorithms.h</includes>
    <incdepgraph>
      <node id="3">
        <label>stdlib.h</label>
      </node>
      <node id="8">
        <label>linked_lists.h</label>
        <link refid="bot_2linked__lists_8h"/>
      </node>
      <node id="4">
        <label>string.h</label>
      </node>
      <node id="7">
        <label>logic.h</label>
        <link refid="bot_2logic_8h"/>
      </node>
      <node id="1">
        <label>bot/interface.c</label>
        <link refid="bot_2interface_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>interface.h</label>
        <link refid="bot_2interface_8h"/>
      </node>
      <node id="9">
        <label>algorithms.h</label>
        <link refid="bot_2algorithms_8h"/>
      </node>
      <node id="5">
        <label>data.h</label>
        <link refid="bot_2data_8h"/>
      </node>
      <node id="2">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="bot_2interface_8c_1a76555a3bd437d587a1ef442cc5678d91" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int CMD</definition>
        <argsstring>(STATE *s)</argsstring>
        <name>CMD</name>
        <param>
          <type><ref refid="structSTATE" kindref="compound">STATE</ref> *</type>
          <declname>e</declname>
          <defname>s</defname>
        </param>
        <briefdescription>
<para>Interpretador de commandos Esta função funciona como interpretador de comandos. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>*e</parametername>
</parameternamelist>
<parameterdescription>
<para>Apontador para o estado </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Um inteiro diferente de 1 no caso de erro. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="bot/interface.c" line="14" column="5" bodyfile="bot/interface.c" bodystart="14" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="bot_2interface_8c_1a83e86058ec878c01ecc4d6bdb261760a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void draw</definition>
        <argsstring>(STATE *s, FILE *f)</argsstring>
        <name>draw</name>
        <param>
          <type><ref refid="structSTATE" kindref="compound">STATE</ref> *</type>
          <declname>e</declname>
          <defname>s</defname>
        </param>
        <param>
          <type>FILE *</type>
          <declname>f</declname>
        </param>
        <briefdescription>
<para>Desenha Esta função desenha o estado num ficheiro (stdout). </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>e</parametername>
</parameternamelist>
<parameterdescription>
<para>Apontador para o estado </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>f</parametername>
</parameternamelist>
<parameterdescription>
<para>Ficheiro </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="bot/interface.c" line="64" column="6" bodyfile="bot/interface.c" bodystart="64" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="bot_2interface_8c_1a635304fd39d2875a0d97e81eef1e44e8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void draw_moves</definition>
        <argsstring>(STATE *s, FILE *file)</argsstring>
        <name>draw_moves</name>
        <param>
          <type><ref refid="structSTATE" kindref="compound">STATE</ref> *</type>
          <declname>e</declname>
          <defname>s</defname>
        </param>
        <param>
          <type>FILE *</type>
          <declname>f</declname>
          <defname>file</defname>
        </param>
        <briefdescription>
<para>Desenha Movimentos Esta função desenha o array de jogadas. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>e</parametername>
</parameternamelist>
<parameterdescription>
<para>Apontador para o estado </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>f</parametername>
</parameternamelist>
<parameterdescription>
<para>Ficheiro </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="bot/interface.c" line="72" column="6" bodyfile="bot/interface.c" bodystart="72" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="bot_2interface_8c_1ac444cb2b8a3f3193ee07021255f8419b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void save</definition>
        <argsstring>(STATE *s, char *f)</argsstring>
        <name>save</name>
        <param>
          <type><ref refid="structSTATE" kindref="compound">STATE</ref> *</type>
          <declname>e</declname>
          <defname>s</defname>
        </param>
        <param>
          <type>char *</type>
          <declname>f</declname>
        </param>
        <briefdescription>
<para>Guarda Esta função guarda o estado atual num ficheiro. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>e</parametername>
</parameternamelist>
<parameterdescription>
<para>Apontador para o estado </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>f</parametername>
</parameternamelist>
<parameterdescription>
<para>Ficheiro </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="bot/interface.c" line="83" column="6" bodyfile="bot/interface.c" bodystart="83" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="bot_2interface_8c_1a3d0769de48bd8dab8420f207dd500d89" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void read</definition>
        <argsstring>(STATE *s, char *f)</argsstring>
        <name>read</name>
        <param>
          <type><ref refid="structSTATE" kindref="compound">STATE</ref> *</type>
          <declname>e</declname>
          <defname>s</defname>
        </param>
        <param>
          <type>char *</type>
          <declname>f</declname>
        </param>
        <briefdescription>
<para>Ler Esta função lê o estado atual de um ficheiro. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>e</parametername>
</parameternamelist>
<parameterdescription>
<para>Apontador para o estado </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>f</parametername>
</parameternamelist>
<parameterdescription>
<para>Ficheiro </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="bot/interface.c" line="97" column="6" bodyfile="bot/interface.c" bodystart="97" bodyend="120"/>
      </memberdef>
      <memberdef kind="function" id="bot_2interface_8c_1ade7e81ec20062ddad68940535d60318a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void prompt</definition>
        <argsstring>(STATE *s)</argsstring>
        <name>prompt</name>
        <param>
          <type><ref refid="structSTATE" kindref="compound">STATE</ref> *</type>
          <declname>e</declname>
          <defname>s</defname>
        </param>
        <briefdescription>
<para>Prompt Esta função faz print a informações úteis no ecran. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>e</parametername>
</parameternamelist>
<parameterdescription>
<para>Apontador para o estado </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="bot/interface.c" line="122" column="6" bodyfile="bot/interface.c" bodystart="122" bodyend="124"/>
      </memberdef>
      <memberdef kind="function" id="bot_2interface_8c_1a705eec6ec3ce92c1bddfe04cbe0ffeec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rollback</definition>
        <argsstring>(STATE *s, int num)</argsstring>
        <name>rollback</name>
        <param>
          <type><ref refid="structSTATE" kindref="compound">STATE</ref> *</type>
          <declname>e</declname>
          <defname>s</defname>
        </param>
        <param>
          <type>int</type>
          <declname>m</declname>
          <defname>num</defname>
        </param>
        <briefdescription>
<para>Rollback Esta função faz o rollback do estado e as jogadas até à jogada pretendida pelo jogador com o command <computeroutput>pos _</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>e</parametername>
</parameternamelist>
<parameterdescription>
<para>Apontador para o estado </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>m</parametername>
</parameternamelist>
<parameterdescription>
<para>Número da jogada </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="bot/interface.c" line="126" column="6" bodyfile="bot/interface.c" bodystart="126" bodyend="133"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="5"><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="projeto_2data_8h" kindref="compound">data.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="projeto_2interface_8h" kindref="compound">interface.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="projeto_2logic_8h" kindref="compound">logic.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="projeto_2linked__lists_8h" kindref="compound">linked_lists.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="projeto_2algorithms_8h" kindref="compound">algorithms.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="bot_2interface_8c_1a76555a3bd437d587a1ef442cc5678d91" kindref="member">CMD</ref>(<ref refid="structSTATE" kindref="compound">STATE</ref><sp/>*s)<sp/>{</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>command[<ref refid="bot_2interface_8h_1a6821bafc3c88dfb2e433a095df9940c6" kindref="member">BUF_SIZE</ref>];</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pos_cap<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bot_2interface_8c_1ade7e81ec20062ddad68940535d60318a" kindref="member">prompt</ref>(s);</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(fgets(command,<sp/><ref refid="bot_2interface_8h_1a6821bafc3c88dfb2e433a095df9940c6" kindref="member">BUF_SIZE</ref>,<sp/>stdin)<sp/>==<sp/>NULL)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(command[0]<sp/>&gt;=<sp/></highlight><highlight class="charliteral">&apos;a&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>command[0]<sp/>&lt;=<sp/></highlight><highlight class="charliteral">&apos;h&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(command[0]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;g&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>command[1]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;r&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>f[<ref refid="bot_2interface_8h_1a6821bafc3c88dfb2e433a095df9940c6" kindref="member">BUF_SIZE</ref>];</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sscanf(command,<sp/></highlight><highlight class="stringliteral">&quot;%*s<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>f);</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bot_2interface_8c_1ac444cb2b8a3f3193ee07021255f8419b" kindref="member">save</ref>(s,<sp/>f);</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(command[1]<sp/>&gt;=<sp/></highlight><highlight class="charliteral">&apos;1&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>command[1]<sp/>&lt;=<sp/></highlight><highlight class="charliteral">&apos;8&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structCOORDINATE" kindref="compound">COORDINATE</ref><sp/>c<sp/>=<sp/>{command[0]<sp/>-<sp/></highlight><highlight class="charliteral">&apos;a&apos;</highlight><highlight class="normal">,<sp/>7<sp/>-<sp/>(command[1]<sp/>-<sp/></highlight><highlight class="charliteral">&apos;1&apos;</highlight><highlight class="normal">)};</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="bot_2logic_8c_1ad33a74f125051e78f584bacdcc5138ef" kindref="member">validate_move</ref>(s,<sp/>c))<sp/><ref refid="bot_2logic_8c_1ac040c536402d81b0203f69603da33937" kindref="member">move</ref>(s,<sp/>c);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>puts<sp/>(</highlight><highlight class="stringliteral">&quot;Invalid<sp/>Coordinate&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>puts(</highlight><highlight class="stringliteral">&quot;Invalid<sp/>Command&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos_cap<sp/>=<sp/><ref refid="bot_2data_8c_1a1d5cb836439e1696a21c35c2fb66682b" kindref="member">get_num_moves</ref>(s);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(command[0]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;l&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>f[<ref refid="bot_2interface_8h_1a6821bafc3c88dfb2e433a095df9940c6" kindref="member">BUF_SIZE</ref>];</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sscanf(command,<sp/></highlight><highlight class="stringliteral">&quot;%*s<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>f);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bot_2interface_8c_1a3d0769de48bd8dab8420f207dd500d89" kindref="member">read</ref>(s,<sp/>f);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos_cap<sp/>=<sp/><ref refid="bot_2data_8c_1a1d5cb836439e1696a21c35c2fb66682b" kindref="member">get_num_moves</ref>(s);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(command[0]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;m&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bot_2interface_8c_1a635304fd39d2875a0d97e81eef1e44e8" kindref="member">draw_moves</ref>(s,<sp/>stdout);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(command[0]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;p&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>m;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sscanf(command,<sp/></highlight><highlight class="stringliteral">&quot;%*s<sp/>%d&quot;</highlight><highlight class="normal">,&amp;m);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m<sp/>&lt;<sp/>0<sp/>||<sp/>m<sp/>&gt;<sp/>pos_cap)<sp/>puts<sp/>(</highlight><highlight class="stringliteral">&quot;Invalid<sp/>Move&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><ref refid="bot_2interface_8c_1a705eec6ec3ce92c1bddfe04cbe0ffeec" kindref="member">rollback</ref>(s,m);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(command[0]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;j&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strncmp<sp/>(command,<sp/></highlight><highlight class="stringliteral">&quot;jog2&quot;</highlight><highlight class="normal">,<sp/>4))</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bot_2logic_8c_1ac040c536402d81b0203f69603da33937" kindref="member">move</ref>(s,<sp/><ref refid="bot_2algorithms_8c_1a7d30bc8a083bd9a3d9dadc87ff29c119" kindref="member">pairity</ref>(s));</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><ref refid="bot_2logic_8c_1ac040c536402d81b0203f69603da33937" kindref="member">move</ref>(s,<sp/><ref refid="bot_2algorithms_8c_1a2cdc96ab683123ede90d1ca6961ddddc" kindref="member">find_best_coordinate</ref>(s));</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos_cap<sp/>=<sp/><ref refid="bot_2data_8c_1a1d5cb836439e1696a21c35c2fb66682b" kindref="member">get_num_moves</ref>(s);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(command[0]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;z&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;%d\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="bot_2algorithms_8c_1af561e8d42f3c98a476dd1931339ef95d" kindref="member">num_free_coordinates</ref>(s));</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(command[0]<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;Q&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>puts(</highlight><highlight class="stringliteral">&quot;Invalid<sp/>Command&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bot_2interface_8c_1a83e86058ec878c01ecc4d6bdb261760a" kindref="member">draw</ref>(s,<sp/>stdout);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(command[0]<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;Q&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="62"><highlight class="normal">}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="bot_2interface_8c_1a83e86058ec878c01ecc4d6bdb261760a" kindref="member">draw</ref>(<ref refid="structSTATE" kindref="compound">STATE</ref><sp/>*s,<sp/>FILE<sp/>*f)<sp/>{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y,<sp/>x,<sp/>i<sp/>=<sp/>8;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(y<sp/>=<sp/>0;<sp/>y<sp/>&lt;<sp/>8;<sp/>y++,<sp/>i--,<sp/>putc(</highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">,<sp/>f))</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(x<sp/>=<sp/>0,<sp/>fprintf(f,<sp/></highlight><highlight class="stringliteral">&quot;%d<sp/>&quot;</highlight><highlight class="normal">,<sp/>i);<sp/>x<sp/>&lt;<sp/>8;<sp/>x++)</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(f,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>%c&quot;</highlight><highlight class="normal">,<sp/><ref refid="bot_2data_8c_1ae9732ca1fe9f76dda118295ccd9d4a2c" kindref="member">get_house</ref>(s,<sp/>(<ref refid="structCOORDINATE" kindref="compound">COORDINATE</ref>){x,<sp/>y}));</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>fputs(</highlight><highlight class="stringliteral">&quot;\n<sp/><sp/><sp/>a<sp/>b<sp/>c<sp/>d<sp/>e<sp/>f<sp/>g<sp/>h\n\n&quot;</highlight><highlight class="normal">,<sp/>f);</highlight></codeline>
<codeline lineno="70"><highlight class="normal">}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="bot_2interface_8c_1a635304fd39d2875a0d97e81eef1e44e8" kindref="member">draw_moves</ref>(<ref refid="structSTATE" kindref="compound">STATE</ref><sp/>*s,<sp/>FILE<sp/>*file)<sp/>{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;=<sp/><ref refid="bot_2data_8c_1a1d5cb836439e1696a21c35c2fb66682b" kindref="member">get_num_moves</ref>(s)<sp/>&amp;&amp;<sp/>!(<ref refid="bot_2data_8c_1a1d5cb836439e1696a21c35c2fb66682b" kindref="member">get_num_moves</ref>(s)<sp/>==<sp/>i<sp/>&amp;&amp;<sp/><ref refid="bot_2data_8c_1acc7272ca6071b154e4b5ba4abd639102" kindref="member">get_current_player</ref>(s)<sp/>==<sp/>1);<sp/>i<sp/>++)<sp/>{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structMOVE" kindref="compound">MOVE</ref><sp/>m<sp/>=<sp/><ref refid="bot_2data_8c_1a0288fd61fc5f280bfad6ba32066f52b1" kindref="member">get_move</ref>(s,<sp/>i);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(file,<sp/></highlight><highlight class="stringliteral">&quot;%02d:<sp/>%c%d&quot;</highlight><highlight class="normal">,<sp/>i<sp/>+<sp/>1,<sp/><ref refid="bot_2data_8c_1aa20725a938220bd22635712776edbcc2" kindref="member">get_player_point</ref>(<ref refid="bot_2data_8c_1aef7955bf07f1c7a5f0dbd73c0cbebe20" kindref="member">get_player_coordinate</ref>(m,<sp/>1),<sp/></highlight><highlight class="charliteral">&apos;x&apos;</highlight><highlight class="normal">)<sp/>+<sp/></highlight><highlight class="charliteral">&apos;a&apos;</highlight><highlight class="normal">,<sp/>8<sp/>-<sp/><ref refid="bot_2data_8c_1aa20725a938220bd22635712776edbcc2" kindref="member">get_player_point</ref>(<ref refid="bot_2data_8c_1aef7955bf07f1c7a5f0dbd73c0cbebe20" kindref="member">get_player_coordinate</ref>(m,<sp/>1),<sp/></highlight><highlight class="charliteral">&apos;y&apos;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(i<sp/>==<sp/><ref refid="bot_2data_8c_1a1d5cb836439e1696a21c35c2fb66682b" kindref="member">get_num_moves</ref>(s)<sp/>&amp;&amp;<sp/><ref refid="bot_2data_8c_1acc7272ca6071b154e4b5ba4abd639102" kindref="member">get_current_player</ref>(s)<sp/>==<sp/>2))</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(file,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>%c%d\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="bot_2data_8c_1aa20725a938220bd22635712776edbcc2" kindref="member">get_player_point</ref>(<ref refid="bot_2data_8c_1aef7955bf07f1c7a5f0dbd73c0cbebe20" kindref="member">get_player_coordinate</ref>(m,<sp/>2),<sp/></highlight><highlight class="charliteral">&apos;x&apos;</highlight><highlight class="normal">)<sp/>+<sp/></highlight><highlight class="charliteral">&apos;a&apos;</highlight><highlight class="normal">,<sp/>8<sp/>-<sp/><ref refid="bot_2data_8c_1aa20725a938220bd22635712776edbcc2" kindref="member">get_player_point</ref>(<ref refid="bot_2data_8c_1aef7955bf07f1c7a5f0dbd73c0cbebe20" kindref="member">get_player_coordinate</ref>(m,<sp/>2),<sp/></highlight><highlight class="charliteral">&apos;y&apos;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>putc(</highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">,<sp/>file);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="81"><highlight class="normal">}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="bot_2interface_8c_1ac444cb2b8a3f3193ee07021255f8419b" kindref="member">save</ref>(<ref refid="structSTATE" kindref="compound">STATE</ref><sp/>*s,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*f)<sp/>{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>FILE<sp/>*file<sp/>=<sp/>fopen(f,<sp/></highlight><highlight class="stringliteral">&quot;w&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y,<sp/>x,<sp/>i<sp/>=<sp/>8;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(y<sp/>=<sp/>0;<sp/>y<sp/>&lt;<sp/>8;<sp/>y++,<sp/>i--,<sp/>putc(</highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">,<sp/>file))</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(x<sp/>=<sp/>0;<sp/>x<sp/>&lt;<sp/>8;<sp/>x++)<sp/>{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>h<sp/>=<sp/><ref refid="bot_2data_8c_1ae9732ca1fe9f76dda118295ccd9d4a2c" kindref="member">get_house</ref>(s,<sp/>(<ref refid="structCOORDINATE" kindref="compound">COORDINATE</ref>){x,<sp/>y});</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(h<sp/>==<sp/></highlight><highlight class="charliteral">&apos;@&apos;</highlight><highlight class="normal">)<sp/>h<sp/>=<sp/></highlight><highlight class="charliteral">&apos;*&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(file,<sp/></highlight><highlight class="stringliteral">&quot;%c&quot;</highlight><highlight class="normal">,<sp/>h);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>putc(</highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">,<sp/>file);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bot_2interface_8c_1a635304fd39d2875a0d97e81eef1e44e8" kindref="member">draw_moves</ref>(s,<sp/>file);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>fclose(file);</highlight></codeline>
<codeline lineno="95"><highlight class="normal">}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="bot_2interface_8c_1a3d0769de48bd8dab8420f207dd500d89" kindref="member">read</ref>(<ref refid="structSTATE" kindref="compound">STATE</ref><sp/>*s,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*f)<sp/>{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FILE<sp/>*file<sp/>=<sp/>fopen(f,<sp/></highlight><highlight class="stringliteral">&quot;r&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>c;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bot_2data_8c_1a9a22fdc15d17cbee9741edafc7049ecf" kindref="member">clear_state</ref>(s);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(file<sp/>==<sp/>NULL)<sp/>puts(</highlight><highlight class="stringliteral">&quot;Non<sp/>existent<sp/>file&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y<sp/>=<sp/>0;<sp/>y<sp/>&lt;<sp/>8;<sp/>fgetc(file),y++)</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x<sp/>=<sp/>0;<sp/>x<sp/>&lt;<sp/>8;<sp/>x++)<sp/>{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c<sp/>=<sp/>fgetc(file);<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c<sp/>==<sp/></highlight><highlight class="charliteral">&apos;*&apos;</highlight><highlight class="normal">)<sp/>c<sp/>=<sp/></highlight><highlight class="charliteral">&apos;@&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bot_2data_8c_1ae7eccc4dbc76055132f92dbb6e1de5f9" kindref="member">change_house</ref>(s,<sp/>(<ref refid="structCOORDINATE" kindref="compound">COORDINATE</ref>){x,y},<sp/>c);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>fseek(file,<sp/>1,<sp/>SEEK_CUR);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>c<sp/>!=<sp/>EOF;<sp/>c<sp/>=<sp/>getc(file),<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>p1[2],<sp/>p2[2];</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>l<sp/>=<sp/>fscanf(file,<sp/></highlight><highlight class="stringliteral">&quot;%*s<sp/>%s<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>p1,<sp/>p2);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(l<sp/>==<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bot_2logic_8c_1a91ea696ef2f7c89f3bcf51ca693ead25" kindref="member">make_move</ref>(s,<sp/>(<ref refid="structCOORDINATE" kindref="compound">COORDINATE</ref>)<sp/>{p1[0]<sp/>-<sp/></highlight><highlight class="charliteral">&apos;a&apos;</highlight><highlight class="normal">,<sp/>7<sp/>-<sp/>(p1[1]<sp/>-<sp/></highlight><highlight class="charliteral">&apos;1&apos;</highlight><highlight class="normal">)});</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bot_2logic_8c_1a91ea696ef2f7c89f3bcf51ca693ead25" kindref="member">make_move</ref>(s,<sp/>(<ref refid="structCOORDINATE" kindref="compound">COORDINATE</ref>)<sp/>{p2[0]<sp/>-<sp/></highlight><highlight class="charliteral">&apos;a&apos;</highlight><highlight class="normal">,<sp/>7<sp/>-<sp/>(p2[1]<sp/>-<sp/></highlight><highlight class="charliteral">&apos;1&apos;</highlight><highlight class="normal">)});</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(l<sp/>==<sp/>1)</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bot_2logic_8c_1a91ea696ef2f7c89f3bcf51ca693ead25" kindref="member">make_move</ref>(s,<sp/>(<ref refid="structCOORDINATE" kindref="compound">COORDINATE</ref>)<sp/>{p1[0]<sp/>-<sp/></highlight><highlight class="charliteral">&apos;a&apos;</highlight><highlight class="normal">,<sp/>7<sp/>-<sp/>(p1[1]<sp/>-<sp/></highlight><highlight class="charliteral">&apos;1&apos;</highlight><highlight class="normal">)});</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fclose(file);</highlight></codeline>
<codeline lineno="120"><highlight class="normal">}</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="bot_2interface_8c_1ade7e81ec20062ddad68940535d60318a" kindref="member">prompt</ref>(<ref refid="structSTATE" kindref="compound">STATE</ref><sp/>*s)<sp/>{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;#<sp/>PL%d<sp/>(%d)<sp/>&gt;<sp/>&quot;</highlight><highlight class="normal">,<sp/><ref refid="bot_2data_8c_1acc7272ca6071b154e4b5ba4abd639102" kindref="member">get_current_player</ref>(s),<sp/><ref refid="bot_2data_8c_1a1d5cb836439e1696a21c35c2fb66682b" kindref="member">get_num_moves</ref>(s));</highlight></codeline>
<codeline lineno="124"><highlight class="normal">}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="bot_2interface_8c_1a705eec6ec3ce92c1bddfe04cbe0ffeec" kindref="member">rollback</ref>(<ref refid="structSTATE" kindref="compound">STATE</ref><sp/>*s,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num)<sp/>{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bot_2data_8c_1a9a22fdc15d17cbee9741edafc7049ecf" kindref="member">clear_state</ref>(s);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>num;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structMOVE" kindref="compound">MOVE</ref><sp/>m<sp/>=<sp/><ref refid="bot_2data_8c_1a0288fd61fc5f280bfad6ba32066f52b1" kindref="member">get_move</ref>(s,<sp/>i);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bot_2logic_8c_1a91ea696ef2f7c89f3bcf51ca693ead25" kindref="member">make_move</ref>(s,<sp/><ref refid="bot_2data_8c_1aef7955bf07f1c7a5f0dbd73c0cbebe20" kindref="member">get_player_coordinate</ref>(m,<sp/>1));</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bot_2logic_8c_1a91ea696ef2f7c89f3bcf51ca693ead25" kindref="member">make_move</ref>(s,<sp/><ref refid="bot_2data_8c_1aef7955bf07f1c7a5f0dbd73c0cbebe20" kindref="member">get_player_coordinate</ref>(m,<sp/>2));</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="133"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="bot/interface.c"/>
  </compounddef>
</doxygen>
