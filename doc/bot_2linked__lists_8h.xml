<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.18">
  <compounddef id="bot_2linked__lists_8h" kind="file" language="C++">
    <compoundname>linked_lists.h</compoundname>
    <includedby refid="bot_2algorithms_8c" local="yes">bot/algorithms.c</includedby>
    <includedby refid="bot_8c" local="yes">bot/bot.c</includedby>
    <includedby refid="bot_2interface_8c" local="yes">bot/interface.c</includedby>
    <includedby refid="bot_2linked__lists_8c" local="yes">bot/linked_lists.c</includedby>
    <invincdepgraph>
      <node id="5">
        <label>bot/linked_lists.c</label>
        <link refid="bot_2linked__lists_8c"/>
      </node>
      <node id="1">
        <label>bot/linked_lists.h</label>
        <link refid="bot_2linked__lists_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>bot/bot.c</label>
        <link refid="bot_8c"/>
      </node>
      <node id="4">
        <label>bot/interface.c</label>
        <link refid="bot_2interface_8c"/>
      </node>
      <node id="2">
        <label>bot/algorithms.c</label>
        <link refid="bot_2algorithms_8c"/>
      </node>
    </invincdepgraph>
    <innerclass refid="structNODE" prot="public">NODE</innerclass>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="bot_2linked__lists_8h_1a033767905a5074a8ba2f23b740e7ece5" prot="public" static="no">
        <type>struct <ref refid="structNODE" kindref="compound">NODE</ref> *</type>
        <definition>typedef struct NODE * LIST</definition>
        <argsstring></argsstring>
        <name>LIST</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Apontador para a lista </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="bot/linked_lists.h" line="19" column="13"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="bot_2linked__lists_8h_1a44d30a3a13a3bcf8a9b83fb222541818" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="bot_2linked__lists_8h_1a033767905a5074a8ba2f23b740e7ece5" kindref="member">LIST</ref></type>
        <definition>LIST initialize_list</definition>
        <argsstring>()</argsstring>
        <name>initialize_list</name>
        <briefdescription>
<para>Inicializar lista Esta função incicializa uma lista. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>O jogador atual </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="bot/linked_lists.h" line="26" column="6" bodyfile="bot/linked_lists.c" bodystart="9" bodyend="11" declfile="bot/linked_lists.h" declline="26" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="bot_2linked__lists_8h_1a8ca035235d649368cd4de4e03aef9d44" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="bot_2linked__lists_8h_1a033767905a5074a8ba2f23b740e7ece5" kindref="member">LIST</ref></type>
        <definition>LIST insert_head</definition>
        <argsstring>(LIST l, void *e)</argsstring>
        <name>insert_head</name>
        <param>
          <type><ref refid="bot_2linked__lists_8h_1a033767905a5074a8ba2f23b740e7ece5" kindref="member">LIST</ref></type>
          <declname>l</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
<para>Inserir na cabeça Esta função insere um elemento na cabeça da lista. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>l</parametername>
</parameternamelist>
<parameterdescription>
<para>Lista ligada </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>e</parametername>
</parameternamelist>
<parameterdescription>
<para>Apontador para o elemento a ser adicionado </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>nova lista </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="bot/linked_lists.h" line="35" column="6" bodyfile="bot/linked_lists.c" bodystart="13" bodyend="18" declfile="bot/linked_lists.h" declline="35" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="bot_2linked__lists_8h_1aaeb656d3204a3de7bfc2e0960cdf256f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* get_head</definition>
        <argsstring>(LIST l)</argsstring>
        <name>get_head</name>
        <param>
          <type><ref refid="bot_2linked__lists_8h_1a033767905a5074a8ba2f23b740e7ece5" kindref="member">LIST</ref></type>
          <declname>l</declname>
        </param>
        <briefdescription>
<para>Devolve cabeça Esta função insere um elemento na cabeça da lista. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>l</parametername>
</parameternamelist>
<parameterdescription>
<para>Lista ligada </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Apontador para o primeiro elemento da lista </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="bot/linked_lists.h" line="43" column="6" bodyfile="bot/linked_lists.c" bodystart="20" bodyend="22" declfile="bot/linked_lists.h" declline="43" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="bot_2linked__lists_8h_1ade529e47d7dc09f69454a4f49f873457" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="bot_2linked__lists_8h_1a033767905a5074a8ba2f23b740e7ece5" kindref="member">LIST</ref></type>
        <definition>LIST next</definition>
        <argsstring>(LIST l)</argsstring>
        <name>next</name>
        <param>
          <type><ref refid="bot_2linked__lists_8h_1a033767905a5074a8ba2f23b740e7ece5" kindref="member">LIST</ref></type>
          <declname>l</declname>
        </param>
        <briefdescription>
<para>Proximo elemento Esta função percorre a lista. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>l</parametername>
</parameternamelist>
<parameterdescription>
<para>Lista ligada </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Apontador para a nova lista </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="bot/linked_lists.h" line="51" column="6" bodyfile="bot/linked_lists.c" bodystart="24" bodyend="26" declfile="bot/linked_lists.h" declline="51" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="bot_2linked__lists_8h_1a1ea1edabba84e02dcefc77f948be307a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="bot_2linked__lists_8h_1a033767905a5074a8ba2f23b740e7ece5" kindref="member">LIST</ref></type>
        <definition>LIST remove_head</definition>
        <argsstring>(LIST l)</argsstring>
        <name>remove_head</name>
        <param>
          <type><ref refid="bot_2linked__lists_8h_1a033767905a5074a8ba2f23b740e7ece5" kindref="member">LIST</ref></type>
          <declname>l</declname>
        </param>
        <briefdescription>
<para>Remove cabeça Esta função remove o primeiro elemento da lista. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>l</parametername>
</parameternamelist>
<parameterdescription>
<para>Lista ligada </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Apontador para a nova lista </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="bot/linked_lists.h" line="59" column="6" bodyfile="bot/linked_lists.c" bodystart="28" bodyend="32" declfile="bot/linked_lists.h" declline="59" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="bot_2linked__lists_8h_1a952a8e03e69fc585aea516d32a78257f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int is_list_empty</definition>
        <argsstring>(LIST l)</argsstring>
        <name>is_list_empty</name>
        <param>
          <type><ref refid="bot_2linked__lists_8h_1a033767905a5074a8ba2f23b740e7ece5" kindref="member">LIST</ref></type>
          <declname>l</declname>
        </param>
        <briefdescription>
<para>Lista vazia Esta função verifica se a lista esta vazia. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>l</parametername>
</parameternamelist>
<parameterdescription>
<para>Lista ligada </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>algo diferente de 0 se a lista estiver vazia </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="bot/linked_lists.h" line="67" column="5" bodyfile="bot/linked_lists.c" bodystart="34" bodyend="36" declfile="bot/linked_lists.h" declline="67" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="bot_2linked__lists_8h_1a255458d0a7974cd11ef98887b6c2b8e4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int length</definition>
        <argsstring>(LIST l)</argsstring>
        <name>length</name>
        <param>
          <type><ref refid="bot_2linked__lists_8h_1a033767905a5074a8ba2f23b740e7ece5" kindref="member">LIST</ref></type>
          <declname>l</declname>
        </param>
        <briefdescription>
<para>Tamanho da lista Esta função devolve o tamanho da lista. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>l</parametername>
</parameternamelist>
<parameterdescription>
<para>Lista ligada </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Tamanho da lista </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="bot/linked_lists.h" line="75" column="5" bodyfile="bot/linked_lists.c" bodystart="38" bodyend="42" declfile="bot/linked_lists.h" declline="75" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="bot_2linked__lists_8h_1ae1a80475c119378604652511507c2bf3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int elem</definition>
        <argsstring>(LIST l, void *e)</argsstring>
        <name>elem</name>
        <param>
          <type><ref refid="bot_2linked__lists_8h_1a033767905a5074a8ba2f23b740e7ece5" kindref="member">LIST</ref></type>
          <declname>l</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
<para>IsElem Esta função se é elemento. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>l</parametername>
</parameternamelist>
<parameterdescription>
<para>Uma LISTA </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>e</parametername>
</parameternamelist>
<parameterdescription>
<para>Apontador para o elemento a pesquisar </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True/False </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="bot/linked_lists.h" line="84" column="5" bodyfile="bot/linked_lists.c" bodystart="44" bodyend="47" declfile="bot/linked_lists.h" declline="84" declcolumn="5"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Definição das listas ligadas </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="6"><highlight class="preprocessor">#ifndef<sp/>__LINKED_LISTS_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__LINKED_LISTS_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="16" refid="structNODE" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structNODE" kindref="compound">NODE</ref><sp/>{<sp/></highlight></codeline>
<codeline lineno="17" refid="structNODE_1a8bc9259707768cdfa141602795fd3028" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/>*<ref refid="structNODE_1a8bc9259707768cdfa141602795fd3028" kindref="member">data</ref>;</highlight></codeline>
<codeline lineno="18" refid="structNODE_1a082de8bf4b4d475e2d851604abcbe2ff" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structNODE" kindref="compound">NODE</ref><sp/>*<ref refid="structNODE_1a082de8bf4b4d475e2d851604abcbe2ff" kindref="member">next</ref>;<sp/></highlight></codeline>
<codeline lineno="19" refid="bot_2linked__lists_8h_1a033767905a5074a8ba2f23b740e7ece5" refkind="member"><highlight class="normal">}<sp/>*<ref refid="bot_2linked__lists_8h_1a033767905a5074a8ba2f23b740e7ece5" kindref="member">LIST</ref>;<sp/></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><ref refid="structNODE" kindref="compound">LIST</ref><sp/><ref refid="bot_2linked__lists_8h_1a44d30a3a13a3bcf8a9b83fb222541818" kindref="member">initialize_list</ref>();</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><ref refid="structNODE" kindref="compound">LIST</ref><sp/><ref refid="bot_2linked__lists_8h_1a8ca035235d649368cd4de4e03aef9d44" kindref="member">insert_head</ref>(<ref refid="structNODE" kindref="compound">LIST</ref><sp/>l,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*e);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="bot_2linked__lists_8h_1aaeb656d3204a3de7bfc2e0960cdf256f" kindref="member">get_head</ref>(<ref refid="structNODE" kindref="compound">LIST</ref><sp/>l);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><ref refid="structNODE" kindref="compound">LIST</ref><sp/><ref refid="bot_2linked__lists_8h_1ade529e47d7dc09f69454a4f49f873457" kindref="member">next</ref>(<ref refid="structNODE" kindref="compound">LIST</ref><sp/>l);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><ref refid="structNODE" kindref="compound">LIST</ref><sp/><ref refid="bot_2linked__lists_8h_1a1ea1edabba84e02dcefc77f948be307a" kindref="member">remove_head</ref>(<ref refid="structNODE" kindref="compound">LIST</ref><sp/>l);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="bot_2linked__lists_8h_1a952a8e03e69fc585aea516d32a78257f" kindref="member">is_list_empty</ref>(<ref refid="structNODE" kindref="compound">LIST</ref><sp/>l);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="bot_2linked__lists_8h_1a255458d0a7974cd11ef98887b6c2b8e4" kindref="member">length</ref>(<ref refid="structNODE" kindref="compound">LIST</ref><sp/>l);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="bot_2linked__lists_8h_1ae1a80475c119378604652511507c2bf3" kindref="member">elem</ref>(<ref refid="structNODE" kindref="compound">LIST</ref><sp/>l,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*e);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="bot/linked_lists.h"/>
  </compounddef>
</doxygen>
