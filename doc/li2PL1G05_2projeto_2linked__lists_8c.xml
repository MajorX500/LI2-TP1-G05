<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.18">
  <compounddef id="li2PL1G05_2projeto_2linked__lists_8c" kind="file" language="C++">
    <compoundname>linked_lists.c</compoundname>
    <includes local="no">stddef.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes refid="li2PL1G05_2projeto_2linked__lists_8h" local="yes">linked_lists.h</includes>
    <incdepgraph>
      <node id="3">
        <label>stdlib.h</label>
      </node>
      <node id="2">
        <label>stddef.h</label>
      </node>
      <node id="1">
        <label>li2PL1G05/projeto/linked_lists.c</label>
        <link refid="li2PL1G05_2projeto_2linked__lists_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>linked_lists.h</label>
        <link refid="li2PL1G05_2projeto_2linked__lists_8h"/>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="li2PL1G05_2projeto_2linked__lists_8c_1a44d30a3a13a3bcf8a9b83fb222541818" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="bot_2linked__lists_8h_1a033767905a5074a8ba2f23b740e7ece5" kindref="member">LIST</ref></type>
        <definition>LIST initialize_list</definition>
        <argsstring>()</argsstring>
        <name>initialize_list</name>
        <briefdescription>
<para>Inicializar lista Esta função incicializa uma lista. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>O jogador atual </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="li2PL1G05/projeto/linked_lists.c" line="9" column="6" bodyfile="li2PL1G05/projeto/linked_lists.c" bodystart="9" bodyend="11"/>
      </memberdef>
      <memberdef kind="function" id="li2PL1G05_2projeto_2linked__lists_8c_1ae42717e613a4a3915d623bb2101329cb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="bot_2linked__lists_8h_1a033767905a5074a8ba2f23b740e7ece5" kindref="member">LIST</ref></type>
        <definition>LIST insert_head</definition>
        <argsstring>(LIST l, void *d)</argsstring>
        <name>insert_head</name>
        <param>
          <type><ref refid="bot_2linked__lists_8h_1a033767905a5074a8ba2f23b740e7ece5" kindref="member">LIST</ref></type>
          <declname>l</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>e</declname>
          <defname>d</defname>
        </param>
        <briefdescription>
<para>Inserir na cabeça Esta função insere um elemento na cabeça da lista. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>l</parametername>
</parameternamelist>
<parameterdescription>
<para>Lista ligada </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>e</parametername>
</parameternamelist>
<parameterdescription>
<para>Apontador para o elemento a ser adicionado </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>nova lista </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="li2PL1G05/projeto/linked_lists.c" line="13" column="6" bodyfile="li2PL1G05/projeto/linked_lists.c" bodystart="13" bodyend="18"/>
      </memberdef>
      <memberdef kind="function" id="li2PL1G05_2projeto_2linked__lists_8c_1aaeb656d3204a3de7bfc2e0960cdf256f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* get_head</definition>
        <argsstring>(LIST l)</argsstring>
        <name>get_head</name>
        <param>
          <type><ref refid="bot_2linked__lists_8h_1a033767905a5074a8ba2f23b740e7ece5" kindref="member">LIST</ref></type>
          <declname>l</declname>
        </param>
        <briefdescription>
<para>Devolve cabeça Esta função insere um elemento na cabeça da lista. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>l</parametername>
</parameternamelist>
<parameterdescription>
<para>Lista ligada </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Apontador para o primeiro elemento da lista </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="li2PL1G05/projeto/linked_lists.c" line="20" column="6" bodyfile="li2PL1G05/projeto/linked_lists.c" bodystart="20" bodyend="22"/>
      </memberdef>
      <memberdef kind="function" id="li2PL1G05_2projeto_2linked__lists_8c_1ade529e47d7dc09f69454a4f49f873457" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="bot_2linked__lists_8h_1a033767905a5074a8ba2f23b740e7ece5" kindref="member">LIST</ref></type>
        <definition>LIST next</definition>
        <argsstring>(LIST l)</argsstring>
        <name>next</name>
        <param>
          <type><ref refid="bot_2linked__lists_8h_1a033767905a5074a8ba2f23b740e7ece5" kindref="member">LIST</ref></type>
          <declname>l</declname>
        </param>
        <briefdescription>
<para>Proximo elemento Esta função percorre a lista. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>l</parametername>
</parameternamelist>
<parameterdescription>
<para>Lista ligada </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Apontador para a nova lista </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="li2PL1G05/projeto/linked_lists.c" line="24" column="6" bodyfile="li2PL1G05/projeto/linked_lists.c" bodystart="24" bodyend="26"/>
      </memberdef>
      <memberdef kind="function" id="li2PL1G05_2projeto_2linked__lists_8c_1a1ea1edabba84e02dcefc77f948be307a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="bot_2linked__lists_8h_1a033767905a5074a8ba2f23b740e7ece5" kindref="member">LIST</ref></type>
        <definition>LIST remove_head</definition>
        <argsstring>(LIST l)</argsstring>
        <name>remove_head</name>
        <param>
          <type><ref refid="bot_2linked__lists_8h_1a033767905a5074a8ba2f23b740e7ece5" kindref="member">LIST</ref></type>
          <declname>l</declname>
        </param>
        <briefdescription>
<para>Remove cabeça Esta função remove o primeiro elemento da lista. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>l</parametername>
</parameternamelist>
<parameterdescription>
<para>Lista ligada </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Apontador para a nova lista </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="li2PL1G05/projeto/linked_lists.c" line="28" column="6" bodyfile="li2PL1G05/projeto/linked_lists.c" bodystart="28" bodyend="32"/>
      </memberdef>
      <memberdef kind="function" id="li2PL1G05_2projeto_2linked__lists_8c_1a952a8e03e69fc585aea516d32a78257f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int is_list_empty</definition>
        <argsstring>(LIST l)</argsstring>
        <name>is_list_empty</name>
        <param>
          <type><ref refid="bot_2linked__lists_8h_1a033767905a5074a8ba2f23b740e7ece5" kindref="member">LIST</ref></type>
          <declname>l</declname>
        </param>
        <briefdescription>
<para>Lista vazia Esta função verifica se a lista esta vazia. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>l</parametername>
</parameternamelist>
<parameterdescription>
<para>Lista ligada </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>algo diferente de 0 se a lista estiver vazia </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="li2PL1G05/projeto/linked_lists.c" line="34" column="5" bodyfile="li2PL1G05/projeto/linked_lists.c" bodystart="34" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="li2PL1G05_2projeto_2linked__lists_8c_1a255458d0a7974cd11ef98887b6c2b8e4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int length</definition>
        <argsstring>(LIST l)</argsstring>
        <name>length</name>
        <param>
          <type><ref refid="bot_2linked__lists_8h_1a033767905a5074a8ba2f23b740e7ece5" kindref="member">LIST</ref></type>
          <declname>l</declname>
        </param>
        <briefdescription>
<para>Tamanho da lista Esta função devolve o tamanho da lista. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>l</parametername>
</parameternamelist>
<parameterdescription>
<para>Lista ligada </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Tamanho da lista </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="li2PL1G05/projeto/linked_lists.c" line="38" column="5" bodyfile="li2PL1G05/projeto/linked_lists.c" bodystart="38" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="li2PL1G05_2projeto_2linked__lists_8c_1a002df25972494eb7c280499a9042f94d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int elem</definition>
        <argsstring>(LIST l, void *data)</argsstring>
        <name>elem</name>
        <param>
          <type><ref refid="bot_2linked__lists_8h_1a033767905a5074a8ba2f23b740e7ece5" kindref="member">LIST</ref></type>
          <declname>l</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>e</declname>
          <defname>data</defname>
        </param>
        <briefdescription>
<para>IsElem Esta função se é elemento. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>l</parametername>
</parameternamelist>
<parameterdescription>
<para>Uma LISTA </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>e</parametername>
</parameternamelist>
<parameterdescription>
<para>Apontador para o elemento a pesquisar </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True/False </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="li2PL1G05/projeto/linked_lists.c" line="44" column="5" bodyfile="li2PL1G05/projeto/linked_lists.c" bodystart="44" bodyend="47"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="5"><highlight class="preprocessor">#include<sp/>&lt;stddef.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="projeto_2linked__lists_8h" kindref="compound">linked_lists.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"><ref refid="structNODE" kindref="compound">LIST</ref><sp/><ref refid="bot_2linked__lists_8c_1a44d30a3a13a3bcf8a9b83fb222541818" kindref="member">initialize_list</ref>()<sp/>{</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="11"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"><ref refid="structNODE" kindref="compound">LIST</ref><sp/><ref refid="bot_2linked__lists_8c_1ae42717e613a4a3915d623bb2101329cb" kindref="member">insert_head</ref>(<ref refid="structNODE" kindref="compound">LIST</ref><sp/>l,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*d)<sp/>{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structNODE" kindref="compound">LIST</ref><sp/>nl<sp/>=<sp/>malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structNODE" kindref="compound">NODE</ref>));</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/>nl-&gt;<ref refid="structNODE_1a8bc9259707768cdfa141602795fd3028" kindref="member">data</ref><sp/>=<sp/>d;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/>nl-&gt;<ref refid="structNODE_1a082de8bf4b4d475e2d851604abcbe2ff" kindref="member">next</ref><sp/>=<sp/>l;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nl;</highlight></codeline>
<codeline lineno="18"><highlight class="normal">}</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="bot_2linked__lists_8c_1aaeb656d3204a3de7bfc2e0960cdf256f" kindref="member">get_head</ref>(<ref refid="structNODE" kindref="compound">LIST</ref><sp/>l)<sp/>{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>l-&gt;<ref refid="structNODE_1a8bc9259707768cdfa141602795fd3028" kindref="member">data</ref>;</highlight></codeline>
<codeline lineno="22"><highlight class="normal">}</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><ref refid="structNODE" kindref="compound">LIST</ref><sp/><ref refid="bot_2linked__lists_8c_1ade529e47d7dc09f69454a4f49f873457" kindref="member">next</ref>(<ref refid="structNODE" kindref="compound">LIST</ref><sp/>l)<sp/>{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>l-&gt;<ref refid="structNODE_1a082de8bf4b4d475e2d851604abcbe2ff" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="26"><highlight class="normal">}</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><ref refid="structNODE" kindref="compound">LIST</ref><sp/><ref refid="bot_2linked__lists_8c_1a1ea1edabba84e02dcefc77f948be307a" kindref="member">remove_head</ref>(<ref refid="structNODE" kindref="compound">LIST</ref><sp/>l)<sp/>{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structNODE" kindref="compound">LIST</ref><sp/>nl<sp/>=<sp/>l-&gt;<ref refid="structNODE_1a082de8bf4b4d475e2d851604abcbe2ff" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>free(l);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nl;</highlight></codeline>
<codeline lineno="32"><highlight class="normal">}</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="bot_2linked__lists_8c_1a952a8e03e69fc585aea516d32a78257f" kindref="member">is_list_empty</ref>(<ref refid="structNODE" kindref="compound">LIST</ref><sp/>l)<sp/>{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!l;</highlight></codeline>
<codeline lineno="36"><highlight class="normal">}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="bot_2linked__lists_8c_1a255458d0a7974cd11ef98887b6c2b8e4" kindref="member">length</ref>(<ref refid="structNODE" kindref="compound">LIST</ref><sp/>l)<sp/>{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="bot_2linked__lists_8c_1a255458d0a7974cd11ef98887b6c2b8e4" kindref="member">length</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;<sp/>!<ref refid="bot_2linked__lists_8c_1a952a8e03e69fc585aea516d32a78257f" kindref="member">is_list_empty</ref>(l);<sp/><ref refid="bot_2linked__lists_8c_1a255458d0a7974cd11ef98887b6c2b8e4" kindref="member">length</ref>++,<sp/>l<sp/>=<sp/><ref refid="bot_2linked__lists_8c_1ade529e47d7dc09f69454a4f49f873457" kindref="member">next</ref>(l));</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="bot_2linked__lists_8c_1a255458d0a7974cd11ef98887b6c2b8e4" kindref="member">length</ref>;</highlight></codeline>
<codeline lineno="42"><highlight class="normal">}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="bot_2linked__lists_8c_1a002df25972494eb7c280499a9042f94d" kindref="member">elem</ref>(<ref refid="structNODE" kindref="compound">LIST</ref><sp/>l,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data)<sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(;<sp/>l<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/><ref refid="bot_2linked__lists_8c_1aaeb656d3204a3de7bfc2e0960cdf256f" kindref="member">get_head</ref>(l)<sp/>!=<sp/>data;<sp/>l<sp/>=<sp/><ref refid="bot_2linked__lists_8c_1ade529e47d7dc09f69454a4f49f873457" kindref="member">next</ref>(l));</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!!l;</highlight></codeline>
<codeline lineno="47"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="li2PL1G05/projeto/linked_lists.c"/>
  </compounddef>
</doxygen>
