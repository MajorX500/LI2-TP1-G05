<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.18">
  <compounddef id="bot_2logic_8c" kind="file" language="C++">
    <compoundname>logic.c</compoundname>
    <includes local="no">stdio.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes refid="bot_2data_8h" local="yes">data.h</includes>
    <includes refid="bot_2interface_8h" local="yes">interface.h</includes>
    <includes refid="bot_2logic_8h" local="yes">logic.h</includes>
    <incdepgraph>
      <node id="3">
        <label>stdlib.h</label>
      </node>
      <node id="1">
        <label>bot/logic.c</label>
        <link refid="bot_2logic_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>logic.h</label>
        <link refid="bot_2logic_8h"/>
      </node>
      <node id="5">
        <label>interface.h</label>
        <link refid="bot_2interface_8h"/>
      </node>
      <node id="4">
        <label>data.h</label>
        <link refid="bot_2data_8h"/>
      </node>
      <node id="2">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="bot_2logic_8c_1a91ea696ef2f7c89f3bcf51ca693ead25" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void make_move</definition>
        <argsstring>(STATE *s, COORDINATE c)</argsstring>
        <name>make_move</name>
        <param>
          <type><ref refid="structSTATE" kindref="compound">STATE</ref> *</type>
          <declname>e</declname>
          <defname>s</defname>
        </param>
        <param>
          <type><ref refid="structCOORDINATE" kindref="compound">COORDINATE</ref></type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>Faz movimento Esta função realiza o movimento chamando todas as auxiliares. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>e</parametername>
</parameternamelist>
<parameterdescription>
<para>Apontador para o estado </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>c</parametername>
</parameternamelist>
<parameterdescription>
<para>A coordenada </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="bot/logic.c" line="11" column="6" bodyfile="bot/logic.c" bodystart="11" bodyend="18"/>
      </memberdef>
      <memberdef kind="function" id="bot_2logic_8c_1ad33a74f125051e78f584bacdcc5138ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int validate_move</definition>
        <argsstring>(STATE *s, COORDINATE c)</argsstring>
        <name>validate_move</name>
        <param>
          <type><ref refid="structSTATE" kindref="compound">STATE</ref> *</type>
          <declname>e</declname>
          <defname>s</defname>
        </param>
        <param>
          <type><ref refid="structCOORDINATE" kindref="compound">COORDINATE</ref></type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>Valida Esta função faz a validação de uma jogada com uma certa coordenada. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>e</parametername>
</parameternamelist>
<parameterdescription>
<para>Apontador para o estado </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>c</parametername>
</parameternamelist>
<parameterdescription>
<para>A coordenada </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Verdadeiro ou Falso </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="bot/logic.c" line="20" column="5" bodyfile="bot/logic.c" bodystart="20" bodyend="25"/>
      </memberdef>
      <memberdef kind="function" id="bot_2logic_8c_1a76ba9bd5bc7f6db8473a13e26d28c4b0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int check_winner</definition>
        <argsstring>(STATE *s, COORDINATE c)</argsstring>
        <name>check_winner</name>
        <param>
          <type><ref refid="structSTATE" kindref="compound">STATE</ref> *</type>
          <declname>e</declname>
          <defname>s</defname>
        </param>
        <param>
          <type><ref refid="structCOORDINATE" kindref="compound">COORDINATE</ref></type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>Verifica vencedor Esta função verifica se existem vencedores no momento da jogada. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>e</parametername>
</parameternamelist>
<parameterdescription>
<para>Apontador para o estado </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>c</parametername>
</parameternamelist>
<parameterdescription>
<para>A coordenada </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Verdadeiro ou Falso </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="bot/logic.c" line="27" column="5" bodyfile="bot/logic.c" bodystart="27" bodyend="31"/>
      </memberdef>
      <memberdef kind="function" id="bot_2logic_8c_1a0611e0716126cf4527e96666d8b78ace" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int valid_moves</definition>
        <argsstring>(STATE *s)</argsstring>
        <name>valid_moves</name>
        <param>
          <type><ref refid="structSTATE" kindref="compound">STATE</ref> *</type>
          <declname>e</declname>
          <defname>s</defname>
        </param>
        <briefdescription>
<para>Scanner Esta função calcula todos os movimentos possíveis no tabuleiro. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>e</parametername>
</parameternamelist>
<parameterdescription>
<para>Apontador para o estado </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Número de jogadas possíveis </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="bot/logic.c" line="33" column="5" bodyfile="bot/logic.c" bodystart="33" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="bot_2logic_8c_1ac040c536402d81b0203f69603da33937" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void move</definition>
        <argsstring>(STATE *s, COORDINATE c)</argsstring>
        <name>move</name>
        <param>
          <type><ref refid="structSTATE" kindref="compound">STATE</ref> *</type>
          <declname>e</declname>
          <defname>s</defname>
        </param>
        <param>
          <type><ref refid="structCOORDINATE" kindref="compound">COORDINATE</ref></type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>Movimento Esta função faz a verificação de vencedores e caso não exista realiza o movimento. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>e</parametername>
</parameternamelist>
<parameterdescription>
<para>Apontador para o estado </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>c</parametername>
</parameternamelist>
<parameterdescription>
<para>A coordenada </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="bot/logic.c" line="41" column="6" bodyfile="bot/logic.c" bodystart="41" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="bot_2logic_8c_1af55c0b888aec4950f295cefc6c79856f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void store_coordinate</definition>
        <argsstring>(STATE *s, COORDINATE c)</argsstring>
        <name>store_coordinate</name>
        <param>
          <type><ref refid="structSTATE" kindref="compound">STATE</ref> *</type>
          <declname>e</declname>
          <defname>s</defname>
        </param>
        <param>
          <type><ref refid="structCOORDINATE" kindref="compound">COORDINATE</ref></type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>Guarda coordenada Esta função guarda uma coordenada no array de jogadas. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>e</parametername>
</parameternamelist>
<parameterdescription>
<para>Apontador para o estado </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>c</parametername>
</parameternamelist>
<parameterdescription>
<para>A coordenada </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="bot/logic.c" line="48" column="6" bodyfile="bot/logic.c" bodystart="48" bodyend="51"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="5"><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="projeto_2data_8h" kindref="compound">data.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="projeto_2interface_8h" kindref="compound">interface.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="projeto_2logic_8h" kindref="compound">logic.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="bot_2logic_8c_1a91ea696ef2f7c89f3bcf51ca693ead25" kindref="member">make_move</ref>(<ref refid="structSTATE" kindref="compound">STATE</ref><sp/>*s,<sp/><ref refid="structCOORDINATE" kindref="compound">COORDINATE</ref><sp/>c)<sp/>{</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bot_2data_8c_1ae7eccc4dbc76055132f92dbb6e1de5f9" kindref="member">change_house</ref>(s,<sp/>c,<sp/><ref refid="bot_2data_8h_1a695a2c9044d3fd6651f8eeeced1b312ba283fc479650da98250635b9c3c0e7e50" kindref="member">WHITE</ref>);</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bot_2data_8c_1ae7eccc4dbc76055132f92dbb6e1de5f9" kindref="member">change_house</ref>(s,<sp/><ref refid="bot_2data_8c_1abb59e73fe191078d67db453b250a3bce" kindref="member">get_previous_move</ref>(s),<sp/><ref refid="bot_2data_8h_1a695a2c9044d3fd6651f8eeeced1b312baf77fb67151d0c18d397069ad8c271ba3" kindref="member">BLACK</ref>);</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bot_2data_8c_1af2a6953a9bee3337d2ab58f083e6ec32" kindref="member">update_previous_move</ref>(s,<sp/>c);</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bot_2logic_8c_1af55c0b888aec4950f295cefc6c79856f" kindref="member">store_coordinate</ref>(s,<sp/>c);</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bot_2data_8c_1af773a56371db5092fc35fb3898116843" kindref="member">next_player</ref>(s);</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="bot_2data_8c_1acc7272ca6071b154e4b5ba4abd639102" kindref="member">get_current_player</ref>(s)<sp/>==<sp/>1)<sp/><ref refid="bot_2data_8c_1aa822db5814f4bd5274bf82ba2f97dfad" kindref="member">next_move</ref>(s);</highlight></codeline>
<codeline lineno="18"><highlight class="normal">}</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="bot_2logic_8c_1ad33a74f125051e78f584bacdcc5138ef" kindref="member">validate_move</ref>(<ref refid="structSTATE" kindref="compound">STATE</ref><sp/>*s,<sp/><ref refid="structCOORDINATE" kindref="compound">COORDINATE</ref><sp/>c)<sp/>{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structCOORDINATE" kindref="compound">COORDINATE</ref><sp/>prev_move<sp/>=<sp/><ref refid="bot_2data_8c_1abb59e73fe191078d67db453b250a3bce" kindref="member">get_previous_move</ref>(s);</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bot_2data_8h_1a695a2c9044d3fd6651f8eeeced1b312b" kindref="member">HOUSE</ref><sp/>h<sp/>=<sp/><ref refid="bot_2data_8c_1ae9732ca1fe9f76dda118295ccd9d4a2c" kindref="member">get_house</ref>(s,<sp/>c);</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((abs(<ref refid="bot_2data_8c_1aa20725a938220bd22635712776edbcc2" kindref="member">get_player_point</ref>(c,<sp/></highlight><highlight class="charliteral">&apos;x&apos;</highlight><highlight class="normal">)<sp/>-<sp/><ref refid="bot_2data_8c_1aa20725a938220bd22635712776edbcc2" kindref="member">get_player_point</ref>(prev_move,<sp/></highlight><highlight class="charliteral">&apos;x&apos;</highlight><highlight class="normal">))<sp/>&lt;=<sp/>1)<sp/>&amp;&amp;<sp/>(abs(<ref refid="bot_2data_8c_1aa20725a938220bd22635712776edbcc2" kindref="member">get_player_point</ref>(c,<sp/></highlight><highlight class="charliteral">&apos;y&apos;</highlight><highlight class="normal">)<sp/>-<sp/><ref refid="bot_2data_8c_1aa20725a938220bd22635712776edbcc2" kindref="member">get_player_point</ref>(prev_move,<sp/></highlight><highlight class="charliteral">&apos;y&apos;</highlight><highlight class="normal">))<sp/>&lt;=<sp/>1)<sp/>&amp;&amp;<sp/>(h<sp/>==<sp/><ref refid="bot_2data_8h_1a695a2c9044d3fd6651f8eeeced1b312ba2f0d18fc0d0fa4a6cd92dc328501874d" kindref="member">EMPTY</ref><sp/>||<sp/>h<sp/>==<sp/><ref refid="bot_2data_8h_1a695a2c9044d3fd6651f8eeeced1b312ba7ec6526640e5add74fe4b322e6343120" kindref="member">H1</ref><sp/>||<sp/>h<sp/>==<sp/><ref refid="bot_2data_8h_1a695a2c9044d3fd6651f8eeeced1b312babc856fd5d1be355fd3d34b860c506cd0" kindref="member">H2</ref>))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="25"><highlight class="normal">}</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="bot_2logic_8c_1a76ba9bd5bc7f6db8473a13e26d28c4b0" kindref="member">check_winner</ref>(<ref refid="structSTATE" kindref="compound">STATE</ref><sp/>*s,<sp/><ref refid="structCOORDINATE" kindref="compound">COORDINATE</ref><sp/>c)<sp/>{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="bot_2data_8c_1ae9732ca1fe9f76dda118295ccd9d4a2c" kindref="member">get_house</ref>(s,<sp/>c)<sp/>==<sp/><ref refid="bot_2data_8h_1a695a2c9044d3fd6651f8eeeced1b312ba7ec6526640e5add74fe4b322e6343120" kindref="member">H1</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="bot_2data_8c_1ae9732ca1fe9f76dda118295ccd9d4a2c" kindref="member">get_house</ref>(s,<sp/>c)<sp/>==<sp/><ref refid="bot_2data_8h_1a695a2c9044d3fd6651f8eeeced1b312babc856fd5d1be355fd3d34b860c506cd0" kindref="member">H2</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>2;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="31"><highlight class="normal">}</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="bot_2logic_8c_1a0611e0716126cf4527e96666d8b78ace" kindref="member">valid_moves</ref>(<ref refid="structSTATE" kindref="compound">STATE</ref><sp/>*s)<sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>0,<sp/>x,<sp/>y;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structCOORDINATE" kindref="compound">COORDINATE</ref><sp/>c;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(y<sp/>=<sp/>0;<sp/>y<sp/>&lt;<sp/>8;<sp/>y++)</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(x<sp/>=<sp/>0;<sp/>x<sp/>&lt;<sp/>8;<sp/>c<sp/>=<sp/>(<ref refid="structCOORDINATE" kindref="compound">COORDINATE</ref>)<sp/>{x,<sp/>y},<sp/>n<sp/>+=<sp/><ref refid="bot_2logic_8c_1ad33a74f125051e78f584bacdcc5138ef" kindref="member">validate_move</ref>(s,c),<sp/>x++);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>n;</highlight></codeline>
<codeline lineno="39"><highlight class="normal">}</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="bot_2logic_8c_1ac040c536402d81b0203f69603da33937" kindref="member">move</ref>(<ref refid="structSTATE" kindref="compound">STATE</ref><sp/>*s,<sp/><ref refid="structCOORDINATE" kindref="compound">COORDINATE</ref><sp/>c)<sp/>{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="bot_2logic_8c_1a76ba9bd5bc7f6db8473a13e26d28c4b0" kindref="member">check_winner</ref>(s,<sp/>c))</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Player<sp/>%d<sp/>wins!\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="bot_2logic_8c_1a76ba9bd5bc7f6db8473a13e26d28c4b0" kindref="member">check_winner</ref>(s,<sp/>c));</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bot_2logic_8c_1a91ea696ef2f7c89f3bcf51ca693ead25" kindref="member">make_move</ref>(s,<sp/>c);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="bot_2logic_8c_1a0611e0716126cf4527e96666d8b78ace" kindref="member">valid_moves</ref>(s))<sp/>(printf(</highlight><highlight class="stringliteral">&quot;Player<sp/>%d<sp/>wins!\n&quot;</highlight><highlight class="normal">,1<sp/>+<sp/>(<ref refid="bot_2data_8c_1acc7272ca6071b154e4b5ba4abd639102" kindref="member">get_current_player</ref>(s)<sp/>%<sp/>2)));</highlight></codeline>
<codeline lineno="46"><highlight class="normal">}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="bot_2logic_8c_1af55c0b888aec4950f295cefc6c79856f" kindref="member">store_coordinate</ref>(<ref refid="structSTATE" kindref="compound">STATE</ref><sp/>*s,<sp/><ref refid="structCOORDINATE" kindref="compound">COORDINATE</ref><sp/>c)<sp/>{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="bot_2data_8c_1acc7272ca6071b154e4b5ba4abd639102" kindref="member">get_current_player</ref>(s)<sp/>==<sp/>1)<sp/><ref refid="bot_2data_8c_1a4cca1db6aae6a1db60e30d1eaa490741" kindref="member">store_p1_coordinate</ref>(s,<sp/>c);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><ref refid="bot_2data_8c_1ab78dcd24ca799611cded6e3de19b72ec" kindref="member">store_p2_coordinate</ref>(s,<sp/>c);</highlight></codeline>
<codeline lineno="51"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="bot/logic.c"/>
  </compounddef>
</doxygen>
